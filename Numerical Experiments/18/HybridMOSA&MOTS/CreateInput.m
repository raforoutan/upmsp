function Input=CreateInput

alpha={[5,9]
[1,3,8]
[1,8]
[1,3,4,7,10]
[1,2,3,8,10]
[1,2,4,5]
[1,2,3,4,5,6,7,8,9]
[3,4,6,7,9]
[3,8,9]
[5,6]
[3,5,10]
[1,9,10]
5
[1,2,4,5,6,7,8,9]
[2,7]
[1,2,3,4,7,8,10]
[2,4,5,8,10]
[4,5,8]
[2,3,4,7,8,9,10]
[1,2,6,9]
[5,7]
[1,2,4,5,9,10]
[6,9]
[1,3,4,5,6,7,8,9,10]
[1,3,5,6,7,8,10]
[1,2,3,4,6,7,8,9,10]
[3,4,5,6,7,8,9,10]
[1,2,3,4,5,6,7,9,10]
[1,3,4,5,7,8,10]
[1,2,3,4,5,8,9,10]
[1,2,5,6,8,9,10]
[7,8,9,10]
[1,3,5,7,8,10]
[1,2,3,4,5,7,8,9,10]
8
[1,3,5,6,8,10]
[4,5,6,8,9]
[1,2,3,4,5,6,7,8,9,10]
[1,2,3,5,6,8,9]
[1,2,3,4,5,6,7,8,9,10]};   %Machine eligibility

lambda1=[0	0	0	0
0	0	0	0
0	0	0	0
1	0	0	0
0	0	0	0
0	0	0	1
0	0	0	0
0	0	0	0
0	0	0	0
0	0	0	0
0	1	0	0
0	0	0	0
0	0	0	0
0	0	0	0
0	0	0	0
0	0	0	0
0	1	0	0
0	0	0	1
0	0	0	0
0	0	1	0
0	0	0	0
0	0	0	1
0	0	0	0
0	0	0	0
0	0	0	0
0	0	0	0
0	0	0	0
0	0	0	0
0	0	0	1
0	0	0	0
0	0	0	0
0	0	0	0
0	1	0	0
1	0	0	0
0	0	0	0
0	0	0	1
0	0	0	0
0	0	0	1
0	0	1	0
0	0	0	0];   %Membership of a batch
    
lambda2=[0	0	1
0	1	0
0	0	0
0	0	0
1	0	0
0	0	0
0	0	0
0	0	0
0	0	1
0	0	0
0	0	0
0	1	0
0	0	0
0	0	0
0	0	0
1	0	0
0	0	0
0	0	0
0	0	0
0	0	0
0	0	0
0	0	0
0	0	1
0	0	0
0	0	0
0	0	1
0	0	1
0	0	0
0	0	0
0	1	0
0	0	0
1	0	0
0	0	0
0	0	0
1	0	0
0	0	0
1	0	0
0	0	0
0	0	0
1	0	0];   %Membership of a job family 
     
beta= [1	1.50000000000000	2	1	1.50000000000000	2	1.50000000000000	1.50000000000000	1	1.50000000000000	2	1.50000000000000	1.50000000000000	1.50000000000000	2	1.50000000000000	1.50000000000000	1.50000000000000	1.50000000000000	1.50000000000000	1	1.50000000000000	2	2	2	2	2	2	2	2	1	1.50000000000000	1.50000000000000	1	1	2	2	1	1	2
1.50000000000000	1	1.50000000000000	1	2	2	1	1.50000000000000	2	1	2	1	1	1	2	2	2	1.50000000000000	2	1	1.50000000000000	1	1.50000000000000	2	1	1.50000000000000	1	1	2	1	2	1.50000000000000	2	1	2	1.50000000000000	2	1	1.50000000000000	1
2	1.50000000000000	1	2	1.50000000000000	1	2	2	1	1.50000000000000	1.50000000000000	1	1.50000000000000	2	1	2	1.50000000000000	1.50000000000000	1	1	1.50000000000000	1.50000000000000	1.50000000000000	2	2	2	1.50000000000000	1.50000000000000	1.50000000000000	1	1.50000000000000	1	1.50000000000000	2	1.50000000000000	1	2	2	1.50000000000000	1
2	1.50000000000000	1.50000000000000	2	1	2	2	1	2	2	1	1.50000000000000	1.50000000000000	1.50000000000000	1.50000000000000	2	1.50000000000000	1.50000000000000	1	2	1.50000000000000	1.50000000000000	2	1	1.50000000000000	1.50000000000000	1.50000000000000	1	2	1	1.50000000000000	1	2	1.50000000000000	2	1.50000000000000	2	1	2	2
1.50000000000000	1.50000000000000	1.50000000000000	2	1	1	2	1	1	1.50000000000000	1	2	2	2	1.50000000000000	2	1	1.50000000000000	2	1	1.50000000000000	2	1	1	2	1.50000000000000	1	1	1.50000000000000	1.50000000000000	1	1.50000000000000	2	1	1.50000000000000	1.50000000000000	2	1	2	1
1.50000000000000	2	2	1	2	1	2	2	1.50000000000000	2	2	1	2	2	2	1	1.50000000000000	1	1	1	1.50000000000000	1.50000000000000	2	1.50000000000000	1.50000000000000	2	2	1.50000000000000	2	1	2	1.50000000000000	1	2	1.50000000000000	1	1	2	2	2
2	2	2	1	2	2	1	1	2	1	2	1.50000000000000	1.50000000000000	1	1.50000000000000	1.50000000000000	1	1.50000000000000	2	1	1.50000000000000	1.50000000000000	1	2	2	1	1.50000000000000	2	1.50000000000000	2	2	2	1	1	1	1	1	1.50000000000000	1.50000000000000	2
2	1	1.50000000000000	1	2	1	2	2	2	1.50000000000000	1.50000000000000	1.50000000000000	1	2	2	1	2	1	1	1.50000000000000	1	1	2	1	1.50000000000000	1	1.50000000000000	2	1	1	2	2	1.50000000000000	1.50000000000000	1	2	1.50000000000000	1.50000000000000	1.50000000000000	1
1.50000000000000	1.50000000000000	1	1	2	1	1	2	2	1.50000000000000	2	2	1.50000000000000	1.50000000000000	2	1.50000000000000	1.50000000000000	2	1.50000000000000	1	1.50000000000000	1.50000000000000	1.50000000000000	1.50000000000000	2	1.50000000000000	1.50000000000000	1	1	1.50000000000000	1.50000000000000	2	2	2	1	2	1	2	1.50000000000000	1
1	1	2	1	1.50000000000000	1	1	1	2	1	1.50000000000000	1	1.50000000000000	1.50000000000000	1	2	2	2	1	1.50000000000000	1	1	1	1.50000000000000	1	1.50000000000000	1	1.50000000000000	1.50000000000000	1.50000000000000	2	1	2	2	2	1	1	1.50000000000000	2	1];   %Speed of machines for each job  

I=numel(beta(:,1));   %Number of machines
J=numel(beta(1,:));   %Number of jobs
B=numel(lambda1(1,:));   %Number of batches
F=numel(lambda2(1,:));   %Number of job families
K=J;   %Number of positions

T=[2	5	7	7	2	6	8	5	2	4	6	2	5	5	8	3	2	6	2	9	4	6	7	7	5	7	8	8	3	5	7	3	6	5	5	4	2	4	8	5];   %Processing time of jobs
FF=[10	15	15	10	20	15	10	15	10	19];   %Fixed cost of machines
tau=[2	3	3	2	4	3	2	3	2	4];   %Variable cost of machines
M=1000000;   %An arbitrary large number
     
Precedency={[]
[]
[]
[]
[]
[]
[6,3]
[]
[]
[]
[]
[]
[]
[]
5
[]
[]
[8,11]
[]
[13,11,7]
[]
[]
[]
[11,7,18]
[]
[]
[19,5,2,25,1,8,21,23,18,12,6,24,4,7,11,3]
[]
[]
[]
[6,26]
[]
[19,13,5]
[]
7
[]
[]
[]
[9,4,3,31,33]
[]};   %Precedence constraints

Input.alpha=alpha;
Input.lambda1=lambda1;
Input.lambda2=lambda2;
Input.beta=beta;
Input.I=I;
Input.J=J;
Input.B=B;
Input.F=F;
Input.K=K;
Input.T=T;
Input.FF=FF;
Input.tau=tau;
Input.M=M;
Input.Precedency=Precedency;
%save matlab.mat alpha lambda1 lambda2 beta I J B F K T FF tau M Precedency
end
